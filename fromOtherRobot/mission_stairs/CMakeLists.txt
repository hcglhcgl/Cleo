cmake_minimum_required(VERSION 2.6)
project(robobot)
#find_package(raspicam REQUIRED)
find_package(raspicam)
if (raspicam_FOUND)
  set(EXTRA_CC_FLAGS " -O2 -g0")
  message("CMAKE found raspberry camere module")
  add_definitions(-Draspicam_CV_LIBS)
else()
  message("CMAKE set to compile without rapberry pi camera modules")
  set(EXTRA_CC_FLAGS "-DNO_PI_CAM -O0 -g2")
endif()
find_package(OpenCV 3.2 REQUIRED )
find_package(Threads REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -std=c++11 ${EXTRA_CC_FLAGS}")
set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} "-pthread")
add_executable(mission_stairs main.cpp urun.cpp ucamera.cpp ubridge.cpp umission.cpp utime.cpp tcpCase.cpp uevent.cpp ujoy.cpp uinfo.cpp umotor.cpp uedge.cpp upose.cpp uirdist.cpp uaccgyro.cpp uaruco.cpp ulibpose2pose.cpp ulib2dline.cpp ulibpose.cpp ulibposev.cpp)
target_link_libraries(mission_stairs ${OpenCV_LIBS} ${raspicam_CV_LIBS} ${CMAKE_THREAD_LIBS_INIT})
install(TARGETS mission_stairs RUNTIME DESTINATION bin)
